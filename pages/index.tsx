import Head from "next/head";
import {Inter} from "next/font/google";
import {useAudiogram} from "@/contexts/audiogramContext";
import axios from "axios";
import Link from "next/link";
import FileUpload from "@/components/FileDropzoneUpload";
import {
  FileWithPath,
  IMAGE_MIME_TYPE,
  MIME_TYPES,
  PDF_MIME_TYPE,
} from "@mantine/dropzone";
import {transcribeAudio} from "@/services/transcription";
import {Box, Button, Flex, Stack} from "@mantine/core";

const inter = Inter({subsets: ["latin"]});

export default function Home() {
  const fps = 30;
  const durationInFrames = 30 * fps;
  const {audiogramDetails, setAudiogramDetails} = useAudiogram();
  const {} = useAudiogram();

  const acceptedFileTypes = ".mp3";

  const uploadImage = async (files: FileWithPath[]) => {
    const formData = new FormData();

    console.log(files, "fiflfilfiflfi");

    if (files[0]) {
      formData.append("file", files[0]);
      formData.append("upload_preset", "audiogramImages");
    }

    try {
      const res = await axios.post(
        "https://api.cloudinary.com/v1_1/sayuk/image/upload",
        formData
      );

      setAudiogramDetails({...audiogramDetails, cover: res.data.secure_url});
    } catch (err) {
      console.error(err);
    }
  };

  const uploadAudio = async (files: FileWithPath[]) => {
    try {
      if (!files[0]) {
        throw new Error("Please select a file.");
      }

      const formData = new FormData();
      formData.append("file", files[0]);
      formData.append("upload_preset", "audiogramAudio");

      const {data} = await axios.post(
        "https://api.cloudinary.com/v1_1/sayuk/upload",
        formData
      );
      const {secure_url: audioUrl} = data;

      // Calling Transcription Service
      const srtUrl = await transcribeAudio(data.secure_url);

      audioUrl &&
        srtUrl &&
        setAudiogramDetails({
          ...audiogramDetails,
          audio: audioUrl,
          srtFile: srtUrl,
        });
    } catch (error) {
      console.log(error);
    }
  };

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main>
        <Flex
          h={"100vh"}
          gap="xl"
          justify="space-between"
          align="stretch"
          direction="column"
          wrap="wrap"
          p={32}
        >
          <Stack>
            <Box>
              <FileUpload onDrop={uploadAudio} accept={[acceptedFileTypes]} />
            </Box>

            <Box>
              <FileUpload onDrop={uploadImage} accept={IMAGE_MIME_TYPE} />
            </Box>
          </Stack>

          <Stack>
            <Link href={"./frame"} style={{alignSelf: "end"}}>
              <Button
                size="md"
                disabled={
                  audiogramDetails.srtFile.length &&
                  audiogramDetails.cover.length
                    ? false
                    : true
                }
              >
                Next
              </Button>
            </Link>
          </Stack>
        </Flex>
      </main>
    </>
  );
}
